name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20

    - name: Install dependencies
      run: go mod tidy

    - name: Run linters
      run: |
        go fmt ./...
        go vet ./...
        staticcheck ./...

    - name: Run tests
      run: go test ./... -cover

  docker-build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t my-go-project:latest .
        docker tag my-go-project:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-go-project:latest

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-go-project:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment

    - name: Rollback on failure
      if: failure()
      run: |
        aws ecs update-service --cluster my-cluster --service my-service --rollback-deployment